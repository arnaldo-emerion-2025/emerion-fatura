unit ManDe2;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls, ComCtrls, ExtCtrls, DBCtrls, Db, Wwdatsrc, DBTables, Wwquery,
  dxCntner, dxEditor, dxEdLib, dxDBELib, dxExEdtr, Buttons, ppBands, ppClass,
  ppStrtch, ppMemo, ppCtrls, ppVar, ppPrnabl, ppCache, ppProd, ppReport, ppDB,
  ppComm, ppRelatv, ppDBPipe, FShowPadrao, dxDBColorMemo, dxDBColorEdit;

type
  TfmManDe2 = class(TfmShowPadrao)
    PaintBox: TPaintBox;
    dxDBEdit29: TdxDBColorEdit;
    Panel3: TPanel;
    Label11: TLabel;
    bConfirmar: TBitBtn;
    bCancelar: TBitBtn;
    EdObsDep: TdxDBColorMemo;
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure PaintBoxPaint(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure bCancelarClick(Sender: TObject);
    procedure bConfirmarClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    {Private declarations}
  public
    {Public declarations}
  end;

var
  Linha: integer;
  fmManDe2: TfmManDe2;

implementation

uses dxDemoUtils, Bbgeral, Bbmensag, ManGDB, ManDe1;

{$R *.DFM}

procedure TfmManDe2.FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
  inherited;

  if key = 27 then bCancelar.OnClick(Sender);

  if key = 123 then bConfirmar.OnClick(Sender);

end;

procedure TfmManDe2.PaintBoxPaint(Sender: TObject);
begin
  with Sender as TPaintBox do FillGrayGradientRect(PaintBox.Canvas, PaintBox.ClientRect, PaintBox.Color);
end;

procedure TfmManDe2.FormShow(Sender: TObject);
begin
  inherited;

  fmManDe1.FatDep.Edit;

  EdObsDep.SetFocus;

end;

procedure TfmManDe2.bCancelarClick(Sender: TObject);
begin
  Close;
end;

procedure TfmManDe2.bConfirmarClick(Sender: TObject);
begin

  fmManDe1.FatDepObsDep.Value := EdObsDep.Text;

  if Trim(fmManDe1.FatDepObsDep.Value) <> '' then
  begin

    if fMsg('Confirma a Entrada dos Itens ? ', 'O') then
    begin

      fmManDe1.FatDep.Edit;

      fmManDe1.FatDepSitDep.Value := 'Concluido';

      with fmManDe1.FatDep do
      begin

        fmManGDB.dbMain.StartTransaction; {Inicia a Transação};

        try

          ApplyUpdates; {Tenta aplicar as alterações};

          fmManGDB.dbMain.Commit; {confirma todas as alterações fechando a transação};

        except

          fmManGDB.dbMain.Rollback; {desfaz as alterações se acontecer um erro};

          fmManDe1.Finalizar := 'N';

          if fmManDe1.FatDep.State = dsBrowse then fmManDe1.FatDep.Edit;

          EdObsDep.SetFocus;

          raise;

        end;

        CommitUpdates; {sucesso!, limpa o cache...}

      end;

      fmManDe1.FatDep.Close;
      fmManDe1.FatDep.Open;

      fmManDe1.Finalizar := 'S';

      Close;

    end;

  end
  else
    fmsgErro('Campo de Preenchimento Obrigatorio não Informado.', EdObsDep);
end;

procedure TfmManDe2.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  inherited;
  if fmManDe1.FatDep.State <> dsBrowse then fmManDe1.FatDep.CancelUpdates;
end;

end.
